{"ast":null,"code":"var _jsxFileName = \"/Users/Katherina/Desktop/FrontEnd/gudkova-front-end-pro-hw48/src/TodoList.js\",\n  _s = $RefreshSig$();\n// TodoList.js\n\nimport React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { addTodo, toggleTodo, addTodosFromApi } from \"./actions\";\nimport axios from \"axios\";\nimport \"./TodoList.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodoList = () => {\n  _s();\n  const todos = useSelector(state => state.todos);\n  const dispatch = useDispatch();\n  const [newTodo, setNewTodo] = useState(\"\");\n  useEffect(() => {\n    axios.get(\"https://65410d1945bedb25bfc326b0.mockapi.io/api/v1/todos\").then(response => {\n      const apiTodos = response.data.map(item => ({\n        id: item.id,\n        text: item.name,\n        completed: false // При завантаженні завдання завжди не виконані\n      }));\n\n      dispatch(addTodosFromApi(apiTodos));\n    }).catch(error => {\n      console.error('Помилка під час відправлення запиту до API:', error);\n    });\n  }, [dispatch]);\n  const handleInputChange = e => {\n    setNewTodo(e.target.value);\n  };\n  const handleAddTodo = () => {\n    if (newTodo.trim() !== \"\") {\n      axios.post(\"https://65410d1945bedb25bfc326b0.mockapi.io/api/v1/todos\", {\n        name: newTodo\n      }).then(response => {\n        dispatch(addTodo({\n          id: response.data.id,\n          text: newTodo,\n          completed: false // Нові завдання завжди не виконані\n        }));\n\n        setNewTodo(\"\");\n      }).catch(error => {\n        console.error('Помилка при відправленні даних на API:', error);\n      });\n    }\n  };\n  const handleToggleTodo = id => {\n    const todo = todos.find(todo => todo.id === id);\n    if (!todo.completed) {\n      dispatch(toggleTodo(id));\n      axios.put(`https://65410d1945bedb25bfc326b0.mockapi.io/api/v1/todos/${id}`, {\n        completed: true\n      }).then(response => {\n        console.log(`Статус завдання ${id} успішно оновлено на API`);\n      }).catch(error => {\n        console.error(`Помилка при оновленні статусу завдання ${id} на API:`, error);\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"TODO LIST\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: todos.map(todo => !todo.completed &&\n      /*#__PURE__*/\n      // Показуємо тільки не виконані завдання\n      _jsxDEV(\"li\", {\n        style: {\n          textDecoration: todo.completed ? \"line-through\" : \"none\"\n        },\n        onClick: () => handleToggleTodo(todo.id),\n        children: todo.text\n      }, todo.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-note\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newTodo,\n        onChange: handleInputChange,\n        placeholder: \"\\u041D\\u043E\\u0432\\u0435 \\u0437\\u0430\\u0432\\u0434\\u0430\\u043D\\u043D\\u044F...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddTodo,\n        children: \"\\u0414\\u041E\\u0414\\u0410\\u0422\\u0418\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 9\n  }, this);\n};\n_s(TodoList, \"BddGEKkCj2HzbncWDkeuNUzE13c=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c = TodoList;\nexport default TodoList;\nvar _c;\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"names":["React","useState","useEffect","useSelector","useDispatch","addTodo","toggleTodo","addTodosFromApi","axios","jsxDEV","_jsxDEV","TodoList","_s","todos","state","dispatch","newTodo","setNewTodo","get","then","response","apiTodos","data","map","item","id","text","name","completed","catch","error","console","handleInputChange","e","target","value","handleAddTodo","trim","post","handleToggleTodo","todo","find","put","log","children","fileName","_jsxFileName","lineNumber","columnNumber","style","textDecoration","onClick","className","type","onChange","placeholder","_c","$RefreshReg$"],"sources":["/Users/Katherina/Desktop/FrontEnd/gudkova-front-end-pro-hw48/src/TodoList.js"],"sourcesContent":["// TodoList.js\n\nimport React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { addTodo, toggleTodo, addTodosFromApi } from \"./actions\";\nimport axios from \"axios\";\nimport \"./TodoList.css\";\n\nconst TodoList = () => {\n    const todos = useSelector((state) => state.todos);\n    const dispatch = useDispatch();\n    const [newTodo, setNewTodo] = useState(\"\");\n\n    useEffect(() => {\n        axios.get(\"https://65410d1945bedb25bfc326b0.mockapi.io/api/v1/todos\")\n            .then(response => {\n                const apiTodos = response.data.map(item => ({\n                    id: item.id,\n                    text: item.name,\n                    completed: false, // При завантаженні завдання завжди не виконані\n                }));\n                dispatch(addTodosFromApi(apiTodos));\n            })\n            .catch(error => {\n                console.error('Помилка під час відправлення запиту до API:', error);\n            });\n    }, [dispatch]);\n\n    const handleInputChange = (e) => {\n        setNewTodo(e.target.value);\n    };\n\n    const handleAddTodo = () => {\n        if (newTodo.trim() !== \"\") {\n            axios.post(\"https://65410d1945bedb25bfc326b0.mockapi.io/api/v1/todos\", {\n                name: newTodo\n            })\n            .then(response => {\n                dispatch(addTodo({\n                    id: response.data.id,\n                    text: newTodo,\n                    completed: false, // Нові завдання завжди не виконані\n                }));\n                setNewTodo(\"\");\n            })\n            .catch(error => {\n                console.error('Помилка при відправленні даних на API:', error);\n            });\n        }\n    };\n\n    const handleToggleTodo = (id) => {\n        const todo = todos.find(todo => todo.id === id);\n        if (!todo.completed) {\n            dispatch(toggleTodo(id));\n\n            axios.put(`https://65410d1945bedb25bfc326b0.mockapi.io/api/v1/todos/${id}`, {\n                completed: true\n            })\n            .then(response => {\n                console.log(`Статус завдання ${id} успішно оновлено на API`);\n            })\n            .catch(error => {\n                console.error(`Помилка при оновленні статусу завдання ${id} на API:`, error);\n            });\n        }\n    };\n\n    return (\n        <div>\n            <h1>TODO LIST</h1>\n            <ul>\n                {todos.map((todo) => (\n                    !todo.completed && // Показуємо тільки не виконані завдання\n                    <li\n                        key={todo.id}\n                        style={{ textDecoration: todo.completed ? \"line-through\" : \"none\" }}\n                        onClick={() => handleToggleTodo(todo.id)}\n                    >\n                        {todo.text}\n                    </li>\n                ))}\n            </ul>\n            <div className=\"new-note\">\n                <input\n                    type=\"text\"\n                    value={newTodo}\n                    onChange={handleInputChange}\n                    placeholder=\"Нове завдання...\"\n                />\n                <button onClick={handleAddTodo}>ДОДАТИ</button>\n            </div>\n        </div>\n    );\n};\n\nexport default TodoList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}